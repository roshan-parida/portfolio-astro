---
import type { Project } from "../types";

interface Props {
    project: Project;
    index?: number;
}

const { project, index = 0 } = Astro.props;
const animationDelay = `${index * 0.1}s`;
---

<div class="project-card" style={`animation-delay: ${animationDelay};`}>
    <h2>{project.title}</h2>
    <p class="description">{project.description}</p>
    {
        project.tags && (
            <div class="tags-container">
                {project.tags.map((tag) => (
                    <span class="tag">{tag}</span>
                ))}
            </div>
        )
    }
    <a
        href={project.link}
        target="_blank"
        rel="noopener noreferrer"
        class="project-link"
    >
        View Project <span class="arrow" aria-hidden="true">â†’</span>
    </a>
</div>

<style>
    .project-card {
        border: 1px solid var(--border);
        border-radius: 8px;
        padding: 1.75rem;
        background-color: var(--bg-secondary);
        transition:
            transform 0.25s ease,
            box-shadow 0.25s ease,
            border-color 0.25s ease;
        position: relative;
        overflow: hidden;
        opacity: 0;
        animation: fadeIn 0.5s ease-out forwards;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .project-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
        border-color: var(--accent);
    }

    .project-card h2 {
        font-size: 1.3rem;
        margin-top: 0;
        margin-bottom: 0.75rem;
        font-family: var(--font-mono);
        color: var(--accent);
    }

    .project-card p.description {
        font-size: 0.95rem;
        margin-bottom: 1.25rem;
        color: var(--text-secondary);
        font-family: var(--font-sans);
        line-height: 1.6;
        flex-grow: 1;
    }

    .tags-container {
        margin-bottom: 1.25rem;
        display: flex;
        flex-wrap: wrap;
        gap: 0.6rem;
    }

    .tag {
        display: inline-block;
        background-color: rgba(88, 166, 255, 0.1);
        color: var(--accent);
        padding: 0.3rem 0.7rem;
        border-radius: 15px;
        font-size: 0.75rem;
        font-family: var(--font-mono);
        border: 1px solid transparent;
        line-height: 1.4;
        transition:
            background-color 0.2s ease,
            border-color 0.2s ease;
    }

    .tag:hover {
        background-color: rgba(88, 166, 255, 0.2);
        border-color: rgba(88, 166, 255, 0.4);
    }

    .project-link {
        color: var(--accent);
        text-decoration: none;
        font-family: var(--font-mono);
        font-size: 0.9rem;
        display: inline-flex;
        align-items: center;
        transition: color 0.2s ease;
        margin-top: auto;
        align-self: flex-start;
    }

    .project-link .arrow {
        margin-left: 0.35rem;
        transition: transform 0.2s ease;
        display: inline-block;
    }

    .project-link:hover {
        color: #a5d6ff;
        text-decoration: underline;
    }

    .project-link:hover .arrow {
        transform: translateX(4px);
    }

    /* Focus state for accessibility */
    .project-link:focus-visible {
        outline: 2px solid var(--accent);
        outline-offset: 2px;
        border-radius: 2px;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(15px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>
